#!/usr/bin/env python3

import sys
import os

CHUNK_SIZE = 34  # 32 bytes of data + 2 bytes of CRC16
DATA_SIZE = 32   # Number of bytes to keep

def uncrc(input_path, output_path):
    if not os.path.isfile(input_path):
        print(f"File not found: {input_path}")
        sys.exit(1)

    with open(input_path, "rb") as infile, open(output_path, "wb") as outfile:
        while True:
            chunk = infile.read(CHUNK_SIZE)
            if not chunk:
                break
            if len(chunk) < CHUNK_SIZE:
                print("Warning: last block is smaller than 34 bytes â€” skipping.")
                break
            outfile.write(chunk[:DATA_SIZE])

    print(f"Done! Output written to: {output_path}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python uncrc.py input_crc.bin [output.bin]")
        sys.exit(1)

    input_file = sys.argv[1]

    if len(sys.argv) >= 3:
        output_file = sys.argv[2]
    else:
        if input_file.endswith("_crc.bin"):
            output_file = input_file.replace("_crc.bin", ".bin")
        else:
            print("Error: Output file not specified and input filename doesn't end with '_crc.bin'.")
            sys.exit(1)

    uncrc(input_file, output_file)
